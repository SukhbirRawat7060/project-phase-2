#include <iostream>
using namespace std;
 
void merge(int arr[], int a, int b, int r)
{
    int n1 = b - a + 1;
    int n2 = r - b;
 
    int L[n1], R[n2];
 
    for (int i = 0; i < n1; i++)
        L[i] = arr[a + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[b + 1 + j];
 
    int i = 0;
 
    int j = 0;
 
    int k = a;
 
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        }
        else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
 
    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }
 
    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[],int a,int r){
    if(a>=r){
        return;
    }
    int b = (a+r-1)/2;
    mergeSort(arr,a,b);
    mergeSort(arr,b+1,r);
    merge(arr,a,b,r);
}

void printArray(int A[], int size)
{
    for (int i = 0; i < size; i++)
        cout << A[i] << " ";
}

int main()
{
    int arr[] = { 8,6,2,3,4,1 };
    int arr_size = sizeof(arr) / sizeof(arr[0]);
 
    cout << "Given array is \n";
    printArray(arr, arr_size);
 
    mergeSort(arr, 0, arr_size - 1);
 
    cout << "\nSorted array is \n";
    printArray(arr, arr_size);
    return 0;
}
